"""
Filter VCF output file generated by VarDict in paired calling
"""

import sys
import argparse
import os
import gzip

def get_info(val):
    info, sinfo = {}, {}
    for v in val[0].split(";"):
        tmp1 = v.split("=")
        if len(tmp1) == 2:
            info[tmp1[0]] = tmp1[1]
    tmp2 = val[1].split(":")
    tmp3 = val[2].split(":")
    for i in range(len(tmp2)):
        sinfo[tmp2[i]] = tmp3[i]
    return info, sinfo

parser = argparse.ArgumentParser(description='Modify VarDict VCF output.')
parser.add_argument('-i', '--input_vcf', type=str, required=True, help='VarDict input vcf file')
parser.add_argument('-o', '--output_vcf', type=str, required=True, help='Filtered output vcf file')
args = vars(parser.parse_args())
input_fn = args['input_vcf']
output_fn = args['output_vcf']

if os.path.basename(input_fn).endswith('.gz'):
    f1 = gzip.open(input_fn, 'r')
else:
    f1 = open(input_fn)
f2 = open(output_fn, "w")
filter_add = False
for line in f1:
    if line[0] == "#":
        if not filter_add:
            f2.write("##FILTER=<ID=PASS,Description=\"Pass all GDC filtering\">\n")
            f2.write("##FILTER=<ID=af0.08,Description=\"alternative allele frequency (AF) less than 0.08\">\n")
            f2.write("##FILTER=<ID=ssf0.005,Description=\"p-value of variant (SSF) greater than 0.005\">\n")
            f2.write("##FILTER=<ID=ssf0.0001msi,Description=\"p-value of variant (SSF) greater than 0.0001"
                     " and MSILEN equal to 1 and MSI greater than 4\">\n")
            filter_add = True
        f2.write(line)
        continue

    val = line.strip().split("\t")
    info, sinfo = get_info(val[7:])
    filter_set = []
    if val[6] != "." and val[6] != "PASS":
        filter_set = val[6].split(";")
    try:
        if float(sinfo["AF"]) < 0.08:
            filter_set.append("f0.08")
    except:
        pass
    try:
        if float(info["SSF"]) > 0.005:
            filter_set.append("P0.005")
    except:
        pass
    try:
        if float(info["SSF"]) > 0.0001 and float(info["MSI"]) == 1 and float(info["MSILEN"]) >= 5:
            filter_set.append("P0.0001MSI")
    except:
        pass
    if len(filter_set) == 0:
        f2.write("\t".join(val[0:6] + ["PASS"] + val[7:]) + "\n")
    else:
        f2.write("\t".join(val[0:6] + [";".join(filter_set)] + val[7:]) + "\n")

f1.close()
f2.close()
